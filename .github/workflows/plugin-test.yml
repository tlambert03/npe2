name: Test Plugins

on:
  pull_request: {}
  workflow_dispatch:

jobs:
  get-plugins:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.plugin-names.outputs.matrix }}
    steps:
      - id: plugin-names
        run: echo "::set-output name=matrix::$(curl -X GET 'https://api.napari-hub.org/plugins' | jq 'keys')"

  test:
    needs: get-plugins
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        plugin: ${{ fromJson(needs.get-plugins.outputs.matrix) }}
        python-version: [3.7, 3.8, 3.9]

    steps:
      # checkout repo
      - name: echo
        run: echo ${{ matrix.plugin }}

      # - name: Check Out Repository
      #   uses: actions/checkout@v2
      # - name: Set Up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # # setup python with dependencies
      # - name: Install dependencies
      #   run: |
      #     pip install --upgrade pip
      #     pip install tox requests GitPython tqdm pandas pkginfo
      # # clone repo of plugin in python script (with input from matrix.plugin)
      # - name: Clone Plugin Repository
      #   id: clone-repo
      #   run: |
      #     echo "::set-output name=repo-path::$(python clone_plugin_repo.py ${{ matrix.plugin }})"
      # - name: "Check tox.ini File Exists"
      #   id: check_files
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: ${{ format('{0}/{1}', steps.clone-repo.outputs.repo-path, 'tox.ini') }}
      # - name: Install Linux libraries
      #   if: steps.check_files.outputs.files_exists == 'true'
      #   run: |
      #     sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
      #       libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
      #       libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0
      # # test repo of plugin (step into working directory and tox)
      # - name: Install dependencies
      #   if: steps.check_files.outputs.files_exists == 'true'
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install tox tox-gh-actions
      # - name: Test with tox
      #   if: steps.check_files.outputs.files_exists == 'true'
      #   working-directory: ${{ steps.clone-repo.outputs.repo-path }}
      #   run: tox
      #   env:
      #     PLATFORM: ubuntu-latest
